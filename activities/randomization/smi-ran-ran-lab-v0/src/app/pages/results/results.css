/* Base container styles */
.results-container {
  display: flex;
  flex-direction: column;
  width: 100%;
  height: 100vh;
  padding: 20px;
  box-sizing: border-box;
  font-family: Arial, sans-serif;
  background-color: #f5f5f5;
}

/* Instruction section at the top */
.instructions {
  margin-bottom: 20px;
  background-color: #f8f9fa;
  padding: 15px;
  border-radius: 5px;
  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
}

.instructions h2 {
  margin-top: 0;
  color: #333;
}

.instructions p {
  margin-bottom: 0;
  line-height: 1.5;
  color: #555;
}

/* ReactFlow container */
.reactflow-container {
  flex: 1;
  min-height: 400px;
  border: 1px solid #ddd;
  border-radius: 5px;
  margin-bottom: 20px;
  position: relative;
  background-color: white;
}

/* Loading overlay for ReactFlow container when fetching submissions */
.loading-overlay {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background-color: rgba(255, 255, 255, 0.7);
  display: flex;
  justify-content: center;
  align-items: center;
  z-index: 10;
  font-size: 1rem;
  color: #333;
  font-weight: 500;
}

/* Read-only result node styling */
.result-node {
  padding: 10px;
  background-color: #f1f8ff;
  border: 2px solid #4c9aff;
  border-radius: 5px;
  width: 150px;
  box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
  text-align: center;
  cursor: default;
  user-select: none;
  color: #111 !important;
}

.result-node-label {
  font-weight: bold;
  font-size: 0.9rem;
  margin-bottom: 5px;
  overflow-wrap: break-word;
  word-break: break-word;
  color: #111 !important;
}

.result-node-count {
  font-size: 0.8rem;
  color: #666;
  font-style: italic;
}

/* Submission node styling - for individual submissions */
.submission-node {
  padding: 10px;
  background-color: rgba(255, 212, 128, 0.9);
  border: 2px solid #ff9800;
  border-radius: 5px;
  width: 140px;
  box-shadow: 0 2px 5px rgba(0, 0, 0, 0.15);
  text-align: center;
  cursor: default;
  user-select: none;
  transition: all 0.15s ease-in-out;
}

.submission-node-label {
  font-weight: bold;
  font-size: 0.85rem;
  margin-bottom: 5px;
  overflow-wrap: break-word;
  word-break: break-word;
}

.submission-node-index {
  font-size: 0.75rem;
  color: #7d5700;
  font-weight: bold;
}

/* Results table styling (updated to match image) */
.results-table-wrapper {
  width: 90%;
  max-width: 1200px;
  margin: 0 auto 40px auto;
  background-color: white;
  border-radius: 8px;
  overflow: auto;
  max-height: 500px;
  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
}

.results-table {
  width: 100%;
  border-collapse: collapse;
  font-family: Arial, sans-serif;
  color: #333;
}

.results-table thead {
  background-color: #e0e0e0;
}

.results-table th {
  padding: 15px 20px;
  text-align: left;
  font-weight: bold;
  text-transform: uppercase;
  letter-spacing: 0.5px;
  color: #666;
  border-bottom: 1px solid #ccc;
  position: sticky;
  top: 0;
  background-color: #e0e0e0;
  z-index: 1;
}

.header-idea {
  width: 70%;
}

.header-agreement {
  width: 30%;
  text-align: center;
}

.results-table td {
  padding: 15px 20px;
  border-bottom: 1px solid #eee;
}

.idea-cell {
  font-weight: 500;
}

.agreement-cell {
  text-align: center;
  font-weight: bold;
}

.result-row {
  cursor: pointer;
  transition: background-color 0.2s ease;
}

.result-row:hover {
  background-color: #e6f7ff;
}

.result-row.active {
  background-color: #e6f7ff;
  border-left: 4px solid #1890ff;
}

/* Loading and error states */
.loading, .error {
  display: flex;
  justify-content: center;
  align-items: center;
  height: 100vh;
  font-size: 1.2rem;
  color: #555;
}

.error {
  color: #d32f2f;
}

/* Add loading indicator and spinner styles */

.loading-indicator {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  height: 100vh;
  width: 100%;
}

.spinner {
  border: 4px solid rgba(0, 0, 0, 0.1);
  border-radius: 50%;
  border-top: 4px solid #3498db;
  width: 40px;
  height: 40px;
  animation: spin 1s linear infinite;
  margin-bottom: 16px;
}

@keyframes spin {
  0% { transform: rotate(0deg); }
  100% { transform: rotate(360deg); }
}
